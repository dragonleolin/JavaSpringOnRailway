spring.application.name=autoDemo
server.port=8080

stock.list=2330,2454,2912,00830,0050,0056,0052,00919,006208

# Fugle API Key
fugle.apikey: ZmVkM2YwNzMtZjI3Yi00ZGE0LWIxM2YtZjVmZDg2MTMzNGNmIDY4YzE2OTJkLTIxMDEtNDFmMS05NmQ4LWNlYjhjYmEwNGU4MA==

# LINE message
line.message.token=KDXS48Y2Wn40PlXvHjTZb441Q0YLgwDYDgyd5CyGH6o/egN/CaR+jYmIEZI8i05cdZoWTpzlV5xPDsUyKNrZpgtrNL5Umx48ZNFHRxfzs0qiqDsIjqVxHiXt6Qwz6HStAYvNE8oHYgpdocELFXCIpAdB04t89/1O/w1cDnyilFU=
line.message.userId=U21513023cd62e08b0d0df678b230c3a4

kdj.schedule.cron=0 0 * * * *

# Telegram Bot
telegram.bot.token=8001489353:AAElbHuFrfQ3StxT6zog4LjekT-TN6DGgTM
telegram.chat.id=8091718303

# Redis (Railway Redis Plugin)
spring.redis.host=redis.railway.internal
spring.redis.port=6379
spring.redis.password=12345678

# ??????????????????????????
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

server.error.include-message=always
server.error.include-binding-errors=always

# PostgreSQL
# spring.datasource.url=jdbc:postgresql://postgres.railway.internal:5432/railway
# spring.datasource.username=postgres
# spring.datasource.password=SMPVJekLNHJMBYPFxGEHymmuNPQUFtWQ
# spring.datasource.driver-class-name=org.postgresql.Driver

# Kafka
# spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Docker Compose?????????
spring.docker.compose.enabled=false